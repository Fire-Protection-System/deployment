version: '3.8'

networks:
  fire-network:
    driver: bridge

services:
  mongo:
    image: mongo:latest
    container_name: mongo
    networks:
      - fire-network
    volumes:
      - ./fire-configurations/data:/data/db
      - ./fire-configurations/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
      - ./logs/mongo:/var/log/mongo
    ports:
      - "${MONGO_PORT:-27017}:27017"
    restart: always


  rabbitmq-service:
    image: rabbitmq:management
    container_name: rabbitmq
    env_file:
      - ./environments/common.env
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
    ports:
      - "${RABBITMQ_PORT:-5672}:5672"
      - "${RABBITMQ_MANAGEMENT_PORT:-15672}:15672"
    networks:
      - fire-network
    restart: unless-stopped
    depends_on:
      - mongo
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5


  forest-simulator-service:
    build:
      context: fire-simulation
      dockerfile: Dockerfile
    container_name: fire-simulation
    volumes:
      - ./fire-simulation:/code
      - ./logs/fire-simulation:/var/log/fire-simulation  
    env_file:
      - ./environments/common.env
      - ./environments/fire-simulation.env
    networks:
      - fire-network
    ports:
      - "${SIMULATOR_PORT:-5000}:5000"
    depends_on:
      - rabbitmq-service
    restart: unless-stopped

  fire-backend-service:
    build:
      context: fire-backend
      dockerfile: Dockerfile
      cache_from:
        - fire-backend:latest
    container_name: fire-backend
    image: fire-backend:latest
    env_file:
      - ./environments/common.env
      - ./environments/fire-backend.env
    networks:
      - fire-network
    volumes:
      - ./fire-backend:/code
      - ./logs/fire-backend:/var/log/fire-backend 
    ports:
      - "${BACKEND_PORT:-8181}:8181"
    restart: always
    depends_on:
      - mongo
      - rabbitmq-service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8181/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  fire-configuration-service:
    build:
      context: fire-configurations
      dockerfile: Dockerfile
    container_name: fire-configuration-service
    networks:
      - fire-network
    ports:
      - "${CONFIG_PORT:-31415}:31415"
    env_file:
      - ./environments/common.env
      - ./environments/fire-configuration.env
    depends_on:
      - mongo
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:31415/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  fire-visualization-service:
    build:
      context: fire-visualization
      dockerfile: Dockerfile
    container_name: fire-visualization-service
    ports:
      - "8080:8080"  
    env_file:
      - ./environments/common.env
    environment:
      - NODE_ENV=development 
    networks:
      - fire-network
    volumes:
      - ./fire-visualization:/app  
    command: npm run start 
    restart: unless-stopped
